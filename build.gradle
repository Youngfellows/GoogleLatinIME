buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        //classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "com.android.tools.build:gradle:4.2.2"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 28
        versionName = "1.0"

        applicationId "com.android.inputmethod.latin"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
            }
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'java/AndroidManifest.xml'
            java.srcDirs = ['java/src', 'java-overridable/src', 'common/src', 'inputmethodcommon/java']
            res.srcDirs = ['java/res']
        }
    }
    externalNativeBuild {
        cmake {
            path 'native/CMakeLists.txt'
        }
    }


    signingConfigs {
        release {
            keyAlias 'AOSP Release'
            keyPassword 'android'
            storeFile file('keystore/aosp-releasekey.jks')
            storePassword 'android'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            keyAlias 'AOSP Release'
            keyPassword 'android'
            storeFile file('keystore/aosp-releasekey.jks')
            storePassword 'android'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        htmlReport false
        abortOnError false
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (buildType.name == 'release' || buildType.name == 'debug') {
                    //def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
                    def createTime = new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+08:00"))
                    //apk名字-版本号-版本名称-生成时间.apk
                    outputFileName = "GoogleLatinIME" + defaultConfig.versionName + "_" + buildType.name + "_" + createTime + ".apk"
                    //outputFileName = "GoogleLatinIME.apk"
                }
            }
        }
    }
}

dependencies {
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.google.code.findbugs:jsr305:3.0.0'
}